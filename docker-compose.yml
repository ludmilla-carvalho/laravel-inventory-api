services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        UID: 1000
        GID: 1000
    container_name: inventory_app
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html:delegated
      - ./vendor:/var/www/html/vendor
      - ./node_modules:/var/www/html/node_modules
    environment:
      APP_ENV: local
      APP_DEBUG: "true"
      DB_HOST: db
      DB_PORT: 3306
      DB_DATABASE: inventory
      DB_USERNAME: inventory
      DB_PASSWORD: secret
      CACHE_DRIVER: redis
      QUEUE_CONNECTION: redis
      REDIS_HOST: redis
    depends_on:
      - db
      - redis
    networks:
      - appnet

  nginx:
    image: nginx:stable-alpine
    container_name: inventory_nginx
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./:/var/www/html:ro
      - ./.docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - app
    networks:
      - appnet

  db:
    image: mysql:8.0
    container_name: inventory_db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: rootsecret
      MYSQL_DATABASE: inventory
      MYSQL_USER: inventory
      MYSQL_PASSWORD: secret
    volumes:
      - db_data:/var/lib/mysql
    ports:
      - "3307:3306"
    networks:
      - appnet

  redis:
    image: redis:7
    container_name: inventory_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - appnet
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: inventory_phpmyadmin
    restart: unless-stopped
    environment:
      PMA_HOST: db
      PMA_PORT: 3306
      PMA_USER: inventory
      PMA_PASSWORD: secret
      UPLOAD_LIMIT: 100M
    ports:
      - "8080:80"
    depends_on:
      - db
    networks:
      - appnet

volumes:
  db_data:
  vendor:

networks:
  appnet:
    driver: bridge
